
services:

  app:
    image: three/php:latest
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/html'
      - './docker/php/php.dev.ini:/usr/local/etc/php/php.ini'
    networks:
      - three
    depends_on:
      - pgsql
      - redis

  nginx:
    image: nginx:alpine
    ports:
      - "${FORWARD_NGINX_PORT:-80}:80"
    volumes:
      - './public:/var/www/html/public'
      - './storage:/var/www/html/storage'
      - './docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf'
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf'
    networks:
      - three
    depends_on:
      - app

  pgsql:
    image: 'postgres:14-alpine'
    restart: always
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'pgsql:/var/lib/postgresql/data'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    networks:
      - three
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    volumes:
      - 'redis:/data'
    networks:
      - three
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - three

volumes:
  pgsql:
    driver: local
  redis:
    driver: local

networks:
  three:
    driver: bridge
